// Code generated by protoc-gen-gomeet-service. DO NOT EDIT.
// source:{{ range .ProtoFiles }} {{.Name}}{{ end }}
package functest

import (
	"github.com/{{ if .IsGogoGen }}gogo{{ else }}golang{{ end }}/protobuf/proto"
)

const FUNCTEST_HTTP = "HTTP"
const FUNCTEST_GRPC = "GRPC"

// FunctionalTestConfig encodes client configuration for functional tests.
type FunctionalTestConfig struct {
	ServerAddress       string
	GrpcServerAddress   string
	HttpServerAddress   string
	CaCertificate       string
	ClientCertificate   string
	ClientPrivateKey    string
	JsonWebTokenSecret  string
	JsonWebToken        string
	MaxRecvMsgSize      int
	MaxSendMsgSize      int
	WithTls             bool
	TokenLifetimeHours  int
	SubjectID           string
	TimeoutSeconds      int
	IsEmbeddedServer    bool
	IsRandomPort        bool
	{{ range .DbTypes }}{{ upperPascalCase . }}DataSourceName string
	{{ end }}
	{{ range .QueueTypes }}{{ if eq . "memory" }}{{ upperPascalCase . }}QueueWorkerCount int
	{{ upperPascalCase . }}QueueMaxSize     int
	{{ else if eq . "rabbitmq" }}// rabbitmq support is not yet implemented
	{{ else if eq . "zeromq" }}// zeromq support is not yet implemented
	{{ else if eq . "sqs" }}// sqs support is not yet implemented
	{{ end }}{{ end }}
	{{ range .ExtraServeFlags -}}{{ upperPascalCase .Name }}ExtraFlag {{ .Type }}
	{{ end }}{{ if .SubServices -}}{{ range .SubServices }}{{ $ss := . }}
	Svc{{ upperPascalCase .ShortName }}Address string
	Svc{{ upperPascalCase .ShortName }}Tls bool
	{{ range .DbTypes }}Svc{{ upperPascalCase $ss.ShortName }}{{ upperPascalCase . }}DataSourceName string
	{{ end }}
	{{ range .QueueTypes }}{{ if eq . "memory" }}Svc{{ upperPascalCase $ss.ShortName }}{{ upperPascalCase . }}QueueWorkerCount int
	Svc{{ upperPascalCase $ss.ShortName }}{{ upperPascalCase . }}QueueMaxSize     int
	{{ else if eq . "rabbitmq" }}// rabbitmq support is not yet implemented
	{{ else if eq . "zeromq" }}// zeromq support is not yet implemented
	{{ else if eq . "sqs" }}// sqs support is not yet implemented
	{{ end }}{{ end }}
	{{ range .ExtraServeFlags }}Svc{{ upperPascalCase $ss.ShortName }}{{ upperPascalCase .Name }}ExtraFlag {{ .Type }}
	{{ end }}{{ end }}{{ end }}
}

// TestFailure encodes a functional test failure description.
type TestFailure struct {
	Message   string
	Procedure string
}

// TestCaseResult encodes a functional test case result description.
type TestCaseResult struct {
	Request  proto.Message
	Response proto.Message
	Error    error
}

// HttpError is for catch HttpError with the json unmarshiling
type HttpError struct {
	Code  uint32
	Error string
}
