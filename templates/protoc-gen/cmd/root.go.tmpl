// Code generated by protoc-gen-gomeet-service. DO NOT EDIT.
// source:{{ range .ProtoFiles }} {{.Name}}{{ end }}
package cmd

import (
	"fmt"
	"os"

	"github.com/spf13/cobra"

	"{{ .GoPkg }}/service"
)

var (
	clientCertificate string
	clientPrivateKey  string
	svc               = service.NewService()
	svcName           = fmt.Sprintf("%s-%s", svc.Name, svc.Version)

	// rootCmd This represents the base command when called without any subcommands
	rootCmd = &cobra.Command{
		Use:   "{{ .Name }}",
		Short: "{{ upperPascalCase .ProjectGroupName }}'s {{ .ShortName }} microservice",
		Long: `To get started run the serve subcommand which will start a server:

  $ {{ .Name }} serve
  $ {{ .Name }} serve -p 42000

Then you can hit it with the client:
{{ cliCmdHelpString .Name .ProtoFiles }}
  $ {{ .Name }} cli --address localhost:42000 version

Or over HTTP/1.1 with curl:
{{ curlCmdHelpString .Name .ProtoFiles }}
  $ curl -X GET    http://localhost:13000/
  $ curl -X GET    http://localhost:13000/version
  $ curl -X GET    http://localhost:13000/metrics
  $ curl -X GET    http://localhost:13000/status
  $ curl -X GET    http://localhost:42000/version

Or via an interactive console :

  $ {{ .Name }} console
  $ {{ .Name }} console --address localhost:42000

`,
	}
)

// Execute adds all child commands to the root command sets flags appropriately.
// This is called by main.main(). It only needs to happen once to the rootCmd.
func Execute() {
	if err := rootCmd.Execute(); err != nil {
		fmt.Println(err)
		os.Exit(-1)
	}
}
