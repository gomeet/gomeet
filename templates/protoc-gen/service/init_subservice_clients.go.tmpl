// Code generated by protoc-gen-gomeet-service. DO NOT EDIT.
// source:{{ range .ProtoFiles }} {{.Name}}{{ end }}
package service

{{ if not .SubServices }}//{{ end }}import (
{{ if not .SubServices }}//{{ end }}	log "github.com/sirupsen/logrus"
{{ if not .SubServices }}//{{ end }}	gomeetService "github.com/gomeet/gomeet/utils/service"
{{ if not .SubServices }}//{{ end }}	// SUB-SERVICES DEFINITION : import-Client
{{ if not .SubServices }}//{{ end }}	// svc{{ "{{SubServiceNamePascalCase}}" }}Client "{{ .ProjectGroupGoPkg }}/{{ .Prefix }}{{ "{{SubServiceNameKebabCase}}" }}/client"
	{{ range .SubServices }}svc{{ upperPascalCase .ShortName }}Client "{{ .GoPkg }}/client"
	{{ end }}// END SUB-SERVICES DEFINITION : import-client
{{ if not .SubServices }}//{{ end }})

const grpcTimeout = 5

// SUB-SERVICES DEFINITION : func-init
{{ range .SubServices }}//init{{ upperPascalCase .ShortName }}Client initializes the gRPC client connecting to the "{{ .Name }}" service.
func (s *{{ lowerPascalCase $.ShortName }}Server) init{{ upperPascalCase .ShortName }}Client() error {
	if s.svc{{ upperPascalCase .ShortName }}GrpcClient != nil {
		return nil
	}

	var (
		cli *svc{{ upperPascalCase .ShortName }}Client.GomeetClient
		err error
	)

	if s.svc{{ upperPascalCase .ShortName }}Address == gomeetService.INPROCESS_ADDRESS {
		log.Debug("Init in process client for svc{{ upperPascalCase .ShortName}}")
		cli, err = svc{{ upperPascalCase .ShortName }}Client.NewGomeetInProcessClient(
			s.inProcessChannel,
		)
	} else {
		log.Debug("Init remote client for svc{{ upperPascalCase .ShortName}}")
		cli, err = svc{{ upperPascalCase .ShortName }}Client.NewGomeetClient(
			s.svc{{ upperPascalCase .ShortName }}Address,
			grpcTimeout,
			s.caCertificate,
			s.certificate,
			s.privateKey,
			s.maxRecvMsgSize,
			s.maxSendMsgSize,
			s.svc{{ upperPascalCase .ShortName }}Tls,
		)
	}

	if err != nil {
		return err
	}

	s.svc{{ upperPascalCase .ShortName }}GrpcClient = cli.GetGRPCClient()

	return nil
}
{{ end }}
// END SUB-SERVICES DEFINITION : func-init
